// src/components/Header/Header.module.scss
.header {
  background: linear-gradient(135deg, #2196f3, #1976d2);
  color: white;
  padding: 1.5rem 0;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  position: sticky;
  top: 0;
  z-index: 100;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  gap: 1rem;
}

.titleSection {
  flex: 1;
  min-width: 250px;
}

.title {
  font-size: 2.5rem;
  font-weight: 700;
  margin: 0 0 0.5rem 0;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
  background: linear-gradient(45deg, #fff, #e3f2fd);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.subtitle {
  font-size: 1.1rem;
  margin: 0;
  opacity: 0.9;
  font-weight: 400;
}

.scoreSection {
  display: flex;
  gap: 1rem;
  align-items: center;
}

.scoreCard {
  background: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 12px;
  padding: 0.75rem 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.25rem;
  min-width: 70px;
  transition: all 0.3s ease;

  &:hover {
    background: rgba(255, 255, 255, 0.25);
    transform: translateY(-2px);
  }
}

.scoreLabel {
  font-size: 0.8rem;
  opacity: 0.8;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.scoreValue {
  font-size: 1.5rem;
  font-weight: 700;
  color: #fff;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
}

// Responsive design
@media (max-width: 768px) {
  .header {
    padding: 1rem 0;
  }

  .container {
    flex-direction: column;
    text-align: center;
    gap: 1rem;
  }

  .title {
    font-size: 2rem;
  }

  .subtitle {
    font-size: 1rem;
  }

  .scoreSection {
    justify-content: center;
  }
}

@media (max-width: 480px) {
  .title {
    font-size: 1.75rem;
  }

  .scoreCard {
    padding: 0.5rem 0.75rem;
    min-width: 60px;
  }

  .scoreValue {
    font-size: 1.25rem;
  }
}

// Animation for score changes
.scoreValue {
  transition: all 0.3s ease;
}

// Pulse animation for new high score
@keyframes pulse {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

.scoreCard:has(.scoreValue:focus) {
  animation: pulse 0.6s ease-in-out;
}
